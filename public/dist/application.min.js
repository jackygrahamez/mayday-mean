"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","duParallax","duScroll","vcRecaptcha"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]).run(["$rootScope","$location","parallaxHelper",function($rootScope,$location,parallaxHelper){$rootScope.background=parallaxHelper.createAnimator(-.3),$rootScope.transitionBackground=function(elementPosition){if(screen.width>767)var left=elementPosition.elemY*-.6,right=-1*left,positions=left+"px "+left+"px, "+parseInt(right+2)+"px "+parseInt(right+2)+"px, "+parseInt(left+3)+"px "+parseInt(right+3)+"px, "+parseInt(right+4)+"px "+parseInt(right+4)+"px, 0px "+left+"px, 0px "+parseInt(right+3)+"px, 0px "+parseInt(right+2)+"px, 0px "+parseInt(right+4)+"px";return{backgroundPosition:positions}}}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Blog Posts","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","Blog Posts","articles"),Menus.addSubMenuItem("topbar","articles","New Post","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("messaging",{url:"/messaging",templateUrl:"modules/core/views/messaging.client.view.html"}).state("contact",{url:"/contact",templateUrl:"modules/core/views/contact.client.view.html"}).state("technology",{url:"/technology",templateUrl:"modules/core/views/technology.client.view.html"}).state("about",{url:"/about",templateUrl:"modules/core/views/about.client.view.html"}).state("privacy",{url:"/privacy",templateUrl:"modules/core/views/privacy.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("AboutController",["$scope","parallaxHelper",function($scope){$scope.grow=function(a){return a.elemY<300&&a.elemY>50?{msTransform:"scale(1.2)",webkitTransform:"scale(1.2)",MozTransform:"scale(1.2)",OTransform:"scale(1.2)",transform:"scale(1.2)"}:{msTransform:"scale(1)",webkitTransform:"scale(1)",MozTransform:"scale(1)",OTransform:"scale(1)",transform:"scale(1)"}}}]),angular.module("core").controller("ContactController",["$scope","vcRecaptchaService","$http",function($scope,vcRecaptchaService,$http){console.log("this is your app's controller"),$scope.response=null,$scope.widgetId=null,$scope.model={key:"6LfsoAYTAAAAALXOlBeMDzOjDDO0dLeURcsSEzQq"},$scope.setResponse=function(response){console.info("Response available"),$scope.response=response},$scope.setWidgetId=function(widgetId){console.info("Created widget ID: %s",widgetId),$scope.widgetId=widgetId},$scope.submit=function(){console.log("sending the captcha response to the server",$scope.response),console.log("Success"),console.dir($scope.contactform.inputName.$modelValue),$scope.formPost={},$scope.formPost.inputName=$scope.contactform.inputName.$modelValue,$scope.formPost.inputEmail=$scope.contactform.inputEmail.$modelValue,$scope.formPost.inputSubject=$scope.contactform.inputSubject.$modelValue,$scope.formPost.inputMessage=$scope.contactform.inputMessage.$modelValue,$http.post("/contact_support",$scope.formPost).success(function(){console.log("success"),$scope.success=!0}).error(function(response){console.log("error: "+response.message),$scope.error=response.message})}}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","$location",function($scope,Authentication,Menus,$location){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.navigation=[{page:"Home",path:""},{page:"About",path:"about"},{page:"Technology",path:"technology"},{page:"Privacy",path:"privacy"},{page:"Contact",path:"contact"}],$scope.userNavigation=[{page:"Sign Up",path:"signup"},{page:"Sign In",path:"signin"}],$scope.navClass=function(page){page=page.toLowerCase();var currentRoute=$location.path().substring(1)||"home";return currentRoute=currentRoute.toLowerCase(),page===currentRoute?"active":""},$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","parallaxHelper",function($scope,Authentication){$scope.authentication=Authentication,$scope.grow=function(a){return a.elemY<300&&a.elemY>50?{msTransform:"scale(1.2)",webkitTransform:"scale(1.2)",MozTransform:"scale(1.2)",OTransform:"scale(1.2)",transform:"scale(1.2)"}:{msTransform:"scale(1)",webkitTransform:"scale(1)",MozTransform:"scale(1)",OTransform:"scale(1)",transform:"scale(1)"}},$scope.myInterval=5e3;$scope.slides=[{image:"/modules/core/img/carousel/c6.jpg"},{image:"/modules/core/img/carousel/c5.jpg"},{image:"/modules/core/img/carousel/c4.jpg"},{image:"/modules/core/img/carousel/c3.jpg"},{image:"/modules/core/img/carousel/c2.jpg"},{image:"/modules/core/img/carousel/c1.jpg"}]}]),angular.module("core").controller("MessagingController",["$scope",function(){}]),angular.module("core").controller("PrivacyController",["$scope",function(){}]),angular.module("core").controller("TechnologyController",["$scope",function(){}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("dashboard",{url:"/dashboard",templateUrl:"modules/users/views/dashboard.client.view.html"}).state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("core").controller("DashboardController",["$scope","$http","Users","Authentication","Menus","$location","vcRecaptchaService",function($scope,$http,Authentication,Users,Menus,$location,vcRecaptchaService){console.log("this is your app's controller"),$scope.response=null,$scope.widgetId=null,$scope.model={key:"6LfsoAYTAAAAALXOlBeMDzOjDDO0dLeURcsSEzQq"},$scope.setResponse=function(response){console.info("Response available"),$scope.response=response},$scope.setWidgetId=function(widgetId){console.info("Created widget ID: %s",widgetId),$scope.widgetId=widgetId},$scope.submit=function(){var valid;console.log("sending the captcha response to the server",$scope.response),valid?console.log("Success"):(console.log("Failed validation"),vcRecaptchaService.reload($scope.widgetId))},$scope.user=Authentication.user,$scope.authentication=Authentication,$scope.contacts=user.contacts.length>0?user.contacts:[],$scope.serviceProvider=[{name:"I Don't Know",domain:""},{name:"AT&T",domain:"txt.att.net"},{name:"T-Mobile",domain:"tmomail.net"},{name:"Verizon",domain:"vtext.com"},{name:"Sprint",domain:"messaging.sprintpcs.com"},{name:"Virgin Mobile",domain:"vmobl.com"},{name:"Tracfone",domain:"mmst5.tracfone.com"},{name:"Metro PCS",domain:"mymetropcs.com"},{name:"Boost Mobile",domain:"myboostmobile.com"},{name:"Cricket",domain:"sms.mycricket.com"},{name:"Nextel",domain:"messaging.nextel.com"},{name:"Alltel",domain:"message.alltel.com"},{name:"Ptel",domain:"ptel.com"},{name:"Suncom",domain:"tms.suncom.com"},{name:"Qwest",domain:"qwestmp.com"},{name:"U.S. Cellular",domain:"email.uscc.net"}],$scope.serviceProvider.sort(function(a,b){return a.name>b.name?1:a.name<b.name?-1:0}),$scope.addContact=function(){$scope.addButton=!1,$scope.contacts.push({edit:!0})},$scope.deleteContact=function($index){user.contacts.splice($index,1),$scope.success=$scope.error=null,$http.post("/users/deletecontact",user).success(function(){$scope.success=!0}).error(function(response){console.log("error: "+response.message),$scope.error=response.message})},$scope.saveContact=function($index){var valid;console.log("sending the captcha response to the server",$scope.response),valid?(console.log("Success"),$scope.contacts[$index].edit=!1,$scope.contacts[$index].update=!0,$scope.contacts[$index].warning="Pending Validation",$scope.success=$scope.error=null,$scope.contacts[$index].provider=$scope.serviceProvider[$scope.contacts[$index].provider],$http.post("/users/addcontact",$scope.contacts[$index]).success(function(){console.log("success"),$scope.success=!0}).error(function(response){console.log("error: "+response.message),$scope.error=response.message})):(console.log("Failed validation"),vcRecaptchaService.reload($scope.widgetId))},$scope.updateMessage=function($index){var message="Dear "+$scope.contacts[$index].firstName+",\n\nI would like to add you as an emergency contact. Please confirm your contact information.\n\nBest,\n\n"+user.firstName;$scope.contacts[$index].message=message,$scope.contacts[$index].warning="Pending Validation"}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);